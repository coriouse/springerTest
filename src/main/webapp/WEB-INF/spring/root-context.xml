<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/jdbc
						http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
						http://www.springframework.org/schema/context 
 						http://www.springframework.org/schema/context/spring-context-3.0.xsd">
 						
 		<context:annotation-config/> 
	
		<bean id="documentDAO" class="org.springer.dao.impl.DocumentDAOImpl"/>					
 	    <bean id="serviceWatermark" class="org.springer.service.ServiceWatermark"/>
 	
 		<jdbc:embedded-database id="dataSource" type="H2"/>
		
		<jdbc:initialize-database data-source="dataSource">
			<jdbc:script location="classpath:sql/schema.sql"/>
			<jdbc:script location="classpath:sql/data.sql"/> 	
		</jdbc:initialize-database>	
		
		 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
      		<property name="dataSource"  ref="dataSource" />    
   		</bean>
   		<bean id="query" class="java.util.HashMap" >
    		<constructor-arg>
        		<map key-type="java.lang.String" value-type="java.lang.String">
 	    	     		     <entry key="document"> 	    	     		     
	    	    		    	 <value>
	    	    		    		 <![CDATA[ select d.id, d.author, d.title, d.watermark, t.content from t_document d inner join t_type_content t on d.type_content=t.id where d.id=? ]]>
	    	    		    	 </value>
    	    		    	 </entry>
    	    		    	 <entry key="documents">    	    		    	 
    	    		    	 <value>
    	    		    	 		<![CDATA[ select d.id, d.author, d.title, d.watermark, t.content from t_document d inner join t_type_content t on d.type_content=t.id ]]>
    	    		    	 </value>
    	    		    	 
    	    		    	 </entry>
    	    		    	 <entry key="book"> 
    	    		    	 
    	    		    	 <value> <![CDATA[ 
    	    		    	 select  c.content, d.title, d.author, t.topic from t_document d inner join t_type_content c on d.type_content = c.id   
						 				 inner join  t_document_topic dt on dt.document = d.id  
						  				 inner join t_topic t on dt.topic=t.id where c.content =? and d.id=?
    	    		    	     	    		    	  ]]>
    	    		    	     	    		    	  
    	    		    	 </value>    	    		    	  
    	    		    	 </entry>    	    		    	  
    	    		    	 <entry key="journal">
    	    		    	 <value>
    	    		    	  <![CDATA[ 
    	    		    							 select  c.content, d.title, d.author from  
						 							 t_document d inner join t_type_content c on d.type_content = c.id   
						 							 where c.content = ? and d.id= ?    	    		    	 
    	    		    	  ]]>
    	    		    	  </value>
    	    		    	  
    	    		    	  
    	    		    	  </entry>
    	    		    	  
    	    		    	  <entry key="updateWatermark">
    	    		    	 <value>
    	    		    	  <![CDATA[ 
    	    		    							update t_document t set t.watermark = ?  where t.id = ?    	    		    	 
    	    		    	  ]]>
    	    		    	  </value>
    	    		    	  </entry>
    	    		    	  
    	    		    	 
        		</map>
  		  	</constructor-arg>
		</bean>
		
</beans>